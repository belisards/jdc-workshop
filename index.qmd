---
title: Branded documents and version control
subtitle: Quarto & Git
format:
  jdc-revealjs:
    toc: true
    toc-depth: 1
    incremental: true
    navigation-mode: linear
---

# Current challenges {.slide-blue}

## Who has experienced...

- Opening multiple email attachments to find the "right" version of a report?

- Seeing filenames like: `Report_Final_v3_FINAL_Jan_revised_ACTUAL.docx`?

- Being unable to answer "where did this number come from?"?

- Spending hours reformatting a report to match brand standards?

::: {.notes}
How common are these challenges?

How do you handle them?

What do you think could be done to avoid such situations?
:::

## Messy version control systems

- Multiple copies across email, shared drives, etc.

- No centralized tracking of changes 

- Potential for lost changes or extra work when people update documents offline or simultaneously

## Replication/reproducibility crisis

:::: {.columns}

::: {.column width="50%"}

- Data analysis created through undocumented manual steps

- Lack of transparency about methods used

- Challenges in creating derived analyses

:::

::: {.column width="50%"}
![](img/nature-survey.jpg){width=80%}
:::

::::
 
## Formatting chaos

- Lack of visual consistency

- Hours spent on manual formatting

- Brand dilution and diminished institutional recognition

# Version control with Git {.slide-blue}

## What is Git?

Git is a professional version control system, mostly known through Github, its most famous application/platform.

Originally designed for code development.

It's been used to write any collaborative documents, such as reports, presentations and websites.

## Key features

Git provides three powerful features:

- A "time machine" for text-based documents

- An audit log of every change

- A collaboration system so multiple people can work simultaneously without conflicts

## Key concepts

Let's see how it works by reviewing key concepts from Git/GitHub:

- Organization

- Repository

- Commit

- Branches

::: {.notes}

Organization is an institutional profile on Github

Repository is a collection of files and folders for a specific project, with the full history of changes (commits). 

Commit is a checkpoint with an explanation of what has changed

Branches are parallel copies of a project used to test ideas without affecting the main version.

:::

# Creating documents with Quarto {.slide-blue}

## Quick review

The state-of-the-art open-source solution for publishing data-driven documents.

Easily combine text, code, images, charts and more.

Quarto separates content from formatting. 

Go from plain-text to reproducible reports, presentations (like this one), dashboards, websites, blogs, and books in HTML, PDF, MS Word, ePub, and more.

## Advantages and challenges

:::: {.columns}

::: {.column width="50%"}

✅ Pros

- Professional, consistent output

- Dynamic updates

- Transparency and reproducibility


:::

::: {.column width="50%"}

⚠️ Cons

- Learning curve

- No WYSIWYG editing

- Dependency on technical setup

:::

::::

::: {.notes}

Professional, consistent output – Quarto produces polished PDFs, HTML pages, and presentations from a single source, ensuring brand and format consistency.

Dynamic updates – When data or analysis changes, reports update automatically, reducing manual copy-paste errors.

Transparency and reproducibility – The document keeps text, data, and visuals together, so others can see how results were generated.

VS

Learning curve – Non-technical users may find the markdown syntax and project setup unfamiliar at first.

Limited WYSIWYG editing – no drag-and-drop or visual layout interface like Word or PowerPoint.

Dependency on technical setup – Rendering documents requires installing Quarto and sometimes R or Python.

:::

# Branded templates

## What is a Quarto template?

- A **starter** that sets up a project structure, configuration file (`_quarto.yml`), theme, and example content

- Ensures **brand consistency** and **repeatable** outputs (HTML, PDF, MS PowerPoint, etc.)

## Examples from UNHCR 

- [Web documents](https://github.com/unhcr-dataviz/quarto-html-unhcr)

- [Slides](https://github.com/unhcr-dataviz/quarto-revealjs-unhcr)

## Hands-on showcase 

- Install Quarto

- Install an interface to facilitate editing
-- VSCode
-- RStudio

- Download a template

- Customize

- Render/export

## Using a template (GUI)

- **RStudio**: *File → New Project → Quarto Project → From Template* → pick a template

- **VS Code**: *Command Palette (Ctrl/Cmd+Shift+P) → Quarto: Create Project → From Template*

- **Command-line interface**: ``quarto use template jointdatacenter/report-template``

## Thank you! {.slide-blue}

Want help?

Drop me a message on Teams or reach me via email.



